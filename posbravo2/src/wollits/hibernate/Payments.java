package wollits.hibernate;

// Generated Jun 14, 2014 7:45:27 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Payments generated by hbm2java
 */
@Entity
@Table(name = "payments", catalog = "wollits")
public class Payments implements java.io.Serializable {

	private int paymentId;
	private Orders orders;
	private String cardName;
	private byte[] dateAuthorized;
	private byte[] dateSettled;
	private String transactionId;
	private String cardNumberLast4Digits;
	private String gatewayAuthResponse;
	private String gatewaySettleResponse;
	private String transactionType;

	public Payments() {
	}

	public Payments(int paymentId, Orders orders, String cardName,
			String transactionId, String cardNumberLast4Digits,
			String gatewayAuthResponse, String transactionType) {
		this.paymentId = paymentId;
		this.orders = orders;
		this.cardName = cardName;
		this.transactionId = transactionId;
		this.cardNumberLast4Digits = cardNumberLast4Digits;
		this.gatewayAuthResponse = gatewayAuthResponse;
		this.transactionType = transactionType;
	}

	public Payments(int paymentId, Orders orders, String cardName,
			byte[] dateAuthorized, byte[] dateSettled, String transactionId,
			String cardNumberLast4Digits, String gatewayAuthResponse,
			String gatewaySettleResponse, String transactionType) {
		this.paymentId = paymentId;
		this.orders = orders;
		this.cardName = cardName;
		this.dateAuthorized = dateAuthorized;
		this.dateSettled = dateSettled;
		this.transactionId = transactionId;
		this.cardNumberLast4Digits = cardNumberLast4Digits;
		this.gatewayAuthResponse = gatewayAuthResponse;
		this.gatewaySettleResponse = gatewaySettleResponse;
		this.transactionType = transactionType;
	}

	@Id
	@Column(name = "payment_id", unique = true, nullable = false)
	public int getPaymentId() {
		return this.paymentId;
	}

	public void setPaymentId(int paymentId) {
		this.paymentId = paymentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@Column(name = "card_name", nullable = false)
	public String getCardName() {
		return this.cardName;
	}

	public void setCardName(String cardName) {
		this.cardName = cardName;
	}

	@Column(name = "date_authorized")
	public byte[] getDateAuthorized() {
		return this.dateAuthorized;
	}

	public void setDateAuthorized(byte[] dateAuthorized) {
		this.dateAuthorized = dateAuthorized;
	}

	@Column(name = "date_settled")
	public byte[] getDateSettled() {
		return this.dateSettled;
	}

	public void setDateSettled(byte[] dateSettled) {
		this.dateSettled = dateSettled;
	}

	@Column(name = "transaction_id", nullable = false)
	public String getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(String transactionId) {
		this.transactionId = transactionId;
	}

	@Column(name = "card_number_last_4_digits", nullable = false)
	public String getCardNumberLast4Digits() {
		return this.cardNumberLast4Digits;
	}

	public void setCardNumberLast4Digits(String cardNumberLast4Digits) {
		this.cardNumberLast4Digits = cardNumberLast4Digits;
	}

	@Column(name = "gateway_auth_response", nullable = false)
	public String getGatewayAuthResponse() {
		return this.gatewayAuthResponse;
	}

	public void setGatewayAuthResponse(String gatewayAuthResponse) {
		this.gatewayAuthResponse = gatewayAuthResponse;
	}

	@Column(name = "gateway_settle_response")
	public String getGatewaySettleResponse() {
		return this.gatewaySettleResponse;
	}

	public void setGatewaySettleResponse(String gatewaySettleResponse) {
		this.gatewaySettleResponse = gatewaySettleResponse;
	}

	@Column(name = "transaction_type", nullable = false)
	public String getTransactionType() {
		return this.transactionType;
	}

	public void setTransactionType(String transactionType) {
		this.transactionType = transactionType;
	}

}

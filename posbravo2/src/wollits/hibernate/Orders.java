package wollits.hibernate;

// Generated Jun 14, 2014 7:45:27 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "wollits")
public class Orders implements java.io.Serializable {

	private int orderId;
	private Contacts contacts;
	private Locations locations;
	private byte[] checkoutComplete;
	private Integer userId;
	private byte[] datePrepared;
	private byte[] datePlaced;
	private Set<OrderMenuItems> orderMenuItemses = new HashSet<OrderMenuItems>(
			0);
	private Set<Payments> paymentses = new HashSet<Payments>(0);

	public Orders() {
	}

	public Orders(int orderId, byte[] checkoutComplete, byte[] datePrepared) {
		this.orderId = orderId;
		this.checkoutComplete = checkoutComplete;
		this.datePrepared = datePrepared;
	}

	public Orders(int orderId, Contacts contacts, Locations locations,
			byte[] checkoutComplete, Integer userId, byte[] datePrepared,
			byte[] datePlaced, Set<OrderMenuItems> orderMenuItemses,
			Set<Payments> paymentses) {
		this.orderId = orderId;
		this.contacts = contacts;
		this.locations = locations;
		this.checkoutComplete = checkoutComplete;
		this.userId = userId;
		this.datePrepared = datePrepared;
		this.datePlaced = datePlaced;
		this.orderMenuItemses = orderMenuItemses;
		this.paymentses = paymentses;
	}

	@Id
	@Column(name = "order_id", unique = true, nullable = false)
	public int getOrderId() {
		return this.orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contact_id")
	public Contacts getContacts() {
		return this.contacts;
	}

	public void setContacts(Contacts contacts) {
		this.contacts = contacts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id")
	public Locations getLocations() {
		return this.locations;
	}

	public void setLocations(Locations locations) {
		this.locations = locations;
	}

	@Column(name = "checkout_complete", nullable = false)
	public byte[] getCheckoutComplete() {
		return this.checkoutComplete;
	}

	public void setCheckoutComplete(byte[] checkoutComplete) {
		this.checkoutComplete = checkoutComplete;
	}

	@Column(name = "user_id")
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "date_prepared", nullable = false)
	public byte[] getDatePrepared() {
		return this.datePrepared;
	}

	public void setDatePrepared(byte[] datePrepared) {
		this.datePrepared = datePrepared;
	}

	@Column(name = "date_placed")
	public byte[] getDatePlaced() {
		return this.datePlaced;
	}

	public void setDatePlaced(byte[] datePlaced) {
		this.datePlaced = datePlaced;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderMenuItems> getOrderMenuItemses() {
		return this.orderMenuItemses;
	}

	public void setOrderMenuItemses(Set<OrderMenuItems> orderMenuItemses) {
		this.orderMenuItemses = orderMenuItemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Payments> getPaymentses() {
		return this.paymentses;
	}

	public void setPaymentses(Set<Payments> paymentses) {
		this.paymentses = paymentses;
	}

}
